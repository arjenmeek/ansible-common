---
- set_fact: vm_name={{ item }}

- set_fact: vm_mountpoint={{ vmpath }}/mp.{{ vm_name }}

- name: create LV mount point
  file: path={{ vm_mountpoint }} state=directory

- name: create root LV
  lvol: vg={{ vg }} lv="{{ vm_name }}_encrypted" size={{ hostvars[vm_name]['disksize'] }}

- name: format root LUKS volume
  command: cryptsetup -v --batch-mode --cipher aes-xts-plain64 --key-size 256 --hash sha256 --iter-time 2000 --use-urandom --key-file=/srv/secure/keys/{{ vm_name }}.key luksFormat /dev/{{ inventory_hostname }}/{{ vm_name }}_encrypted

- name: open root LUKS volume
  command: cryptsetup -v --batch-mode --key-file=/srv/secure/keys/{{ vm_name }}.key luksOpen /dev/{{ inventory_hostname }}/{{ vm_name }}_encrypted {{ vm_name }}

- name: format root filesystem
  filesystem: fstype=ext4 dev=/dev/mapper/{{ vm_name }}

- name: mount root filesystem
  command: mount /dev/mapper/{{ vm_name }} {{ vm_mountpoint }}

#- name: create extra LVs
#  lvol: vg={{ item['vg']|default(inventory_hostname) }} lv="{{ vm_name + '_' + item['name'] }}" size={{ item['size'] }}
#  with_items: "{{ hostvars[vm_name]['extra_volumes']|default([]) }}"

#- name: format extra LVs
#  filesystem: fstype=ext4 dev="/dev/{{ item['vg']|default(inventory_hostname) }}/{{ vm_name }}_{{ item.name }}"
#  with_items: "{{ hostvars[vm_name]['extra_volumes']|default([]) }}"

# TODO: Mount & unmount extra volumes

- name: copy VM template into root LV
  command: rsync --archive --hard-links {{ vmpath }}/template/ {{ vm_mountpoint }}/

- name: create VM fstab
  template: src=fstab.j2 dest={{ vm_mountpoint }}/etc/fstab

- name: VM template - extlinux dir
  file: path={{ vm_mountpoint }}/boot/extlinux state=directory

- name: copy private host keys
  copy: src=./secure/hosts/{{ vm_name }}/ssh_host_{{ item }}_key dest={{ vm_mountpoint }}/etc/ssh/ssh_host_{{ item }}_key mode=0600
  with_items: "{{ ssh_host_key_types }}"
  tags:
    - secure_files

- name: copy public host keys
  copy: src=./files/hosts/{{ vm_name }}/ssh_host_{{ item }}_key.pub dest={{ vm_mountpoint }}/etc/ssh/ssh_host_{{ item }}_key.pub
  with_items: "{{ ssh_host_key_types }}"
  tags:
    - secure_files

- name: create VM root user SSH dir
  file: path={{ vm_mountpoint }}/root/.ssh state=directory mode=700

- name: set VM root user authorized_keys
  lineinfile: dest="{{ vm_mountpoint }}/root/.ssh/authorized_keys" line="{{ item }}" create=yes
  with_items: "{{ hostvars[vm_name]['root_authorized_keys'] }}"

- name: Set VM root password
  lineinfile: dest={{ vm_mountpoint }}/etc/shadow regexp="^root:" line="root:{{ hostvars[vm_name]['root_password'] }}:16819:0:99999:7:::"

- name: VM template - extlinux defaults
  template: src=default_extlinux.j2 dest={{ vm_mountpoint }}/etc/default/extlinux

- name: VM template - extlinux-install script
  copy: src=extlinux-install dest={{ vm_mountpoint }}/usr/local/sbin/extlinux-install mode=755

- name: VM template - extlinux-update script
  copy: src=extlinux-update dest={{ vm_mountpoint }}/usr/local/sbin/extlinux-update mode=755

- name: Set VM hostname
  copy: content="{{ vm_name }}\n" dest={{ vm_mountpoint }}/etc/hostname

- name: Configure VM network interface
  template: src=interfaces.j2 dest={{ vm_mountpoint }}/etc/network/interfaces

- name: Install extlinux to root LV
  command: extlinux --install {{ vm_mountpoint }}/boot/extlinux

- name: Update extlinux inside VM chroot
  command: chroot {{ vm_mountpoint }} extlinux-update

- name: Unmount root LVs
  command: umount {{ vm_mountpoint }}
